{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\Frontend-master\\\\Frontend\\\\si-perpustakaan-frontend-master\\\\src\\\\views\\\\UserList\\\\components\\\\UsersTable\\\\UsersTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { getInitials } from 'helpers';\nimport { StatusBullet } from 'components';\nimport UserListService from './UserListService';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1200\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const {\n    className,\n    users,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [UserList, setUserList] = useState([]);\n  useEffect(() => {\n    refreshUser();\n  });\n\n  const refreshUser = () => {\n    UserListService.getAllUser().then(response => setUserList(response.data));\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const imgUrl = '/images/avatars/social.png';\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, \"Foto\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }, \"NIP\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, \"Nama\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, \"Nomor Telepon\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  }, \"Aksi\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, UserList.slice(0, rowsPerPage).map(user => /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, UserList.indexOf(user) + 1), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: imgUrl,\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, user.nip), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, user.nama), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, user.telepon), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }\n  }))))))))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: UserList.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  })));\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default UsersTable;","map":{"version":3,"sources":["C:/Users/USER/Downloads/Frontend-master/Frontend/si-perpustakaan-frontend-master/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","useEffect","clsx","PropTypes","PerfectScrollbar","makeStyles","Card","CardActions","CardContent","Avatar","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","CreateIcon","DeleteIcon","VisibilityIcon","getInitials","StatusBullet","UserListService","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","UsersTable","props","className","users","rest","classes","rowsPerPage","setRowsPerPage","page","setPage","UserList","setUserList","refreshUser","getAllUser","then","response","data","handlePageChange","event","handleRowsPerPageChange","target","value","imgUrl","slice","map","user","tableRow","id","indexOf","img","nip","nama","telepon","length","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n\tCard,\n\tCardActions,\n\tCardContent,\n\tAvatar,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableRow,\n\tTypography,\n\tTablePagination\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { getInitials } from 'helpers';\nimport { StatusBullet } from 'components';\nimport UserListService from './UserListService';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {},\n\tcontent: {\n\t\tpadding: 0\n\t},\n\tinner: {\n\t\tminWidth: 1200\n\t},\n\tnameContainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\tactions: {\n\t\tjustifyContent: 'flex-end'\n\t}\n}));\n\nconst UsersTable = props => {\n\tconst { className, users, ...rest } = props;\n\n\tconst classes = useStyles();\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\n\tconst [page, setPage] = useState(0);\n\tconst [UserList, setUserList] = useState([]);\n\t\n\tuseEffect(() => {\n\t\trefreshUser()\n\t})\n\n\tconst refreshUser = () => {\n\t\tUserListService.getAllUser().then(response => setUserList(response.data))\n\t}\n\n\tconst handlePageChange = (event, page) => {\n\t\tsetPage(page);\n\t};\n\n\tconst handleRowsPerPageChange = event => {\n\t\tsetRowsPerPage(event.target.value);\n\t};\n\n\tconst imgUrl = '/images/avatars/social.png'\n\n\treturn (\n\t\t<Card\n\t\t\t{...rest}\n\t\t\tclassName={clsx(classes.root, className)}\n\t\t>\n\t\t\t<CardContent className={classes.content}>\n\t\t\t\t<PerfectScrollbar>\n\t\t\t\t\t<div className={classes.inner}>\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell>No</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Foto</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>NIP</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Nama</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Nomor Telepon</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Aksi</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{UserList.slice(0, rowsPerPage).map(user => (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\tclassName={classes.tableRow}\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{UserList.indexOf(user) + 1}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Avatar \n\t\t\t\t\t\t\t\t\t\t\tsrc={imgUrl}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.img}\n\t\t\t\t\t\t\t\t\t\t></Avatar>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{user.nip}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{user.nama}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{user.telepon}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityIcon />\n\t\t\t\t\t\t\t\t\t\t\t<CreateIcon />\n\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</div>\n\t\t\t\t</PerfectScrollbar>\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.actions}>\n\t\t\t\t<TablePagination\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={UserList.length}\n\t\t\t\t\tonChangePage={handlePageChange}\n\t\t\t\t\tonChangeRowsPerPage={handleRowsPerPageChange}\n\t\t\t\t\tpage={page}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t/>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nUsersTable.propTypes = {\n\tclassName: PropTypes.string,\n\tusers: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}